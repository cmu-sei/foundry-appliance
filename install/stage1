#!/bin/bash -e
#
# Copyright 2022 Carnegie Mellon University.
# Released under a BSD (SEI)-style license, please see LICENSE.md in the
# project root or contact permission@sei.cmu.edu for full terms.
#
# Foundry Appliance Install - Stage 1
#

echo "$APPLIANCE_VERSION" > /etc/appliance_version

# Expand LVM volume to use full drive capacity
~/foundry/expand-volume

# Disable swap for Kubernetes
swapoff -a
sed -i -r 's/(\/swap\.img.*)/#\1/' /etc/fstab

# Add new repositories and upgrade existing Ubuntu packages
curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list
apt-get update
apt-get full-upgrade -y

# Stop multipathd errors in syslog
cat <<EOF >> /etc/multipath.conf
blacklist {
    devnode "sda$"
}
EOF
systemctl restart multipathd

# Add dnsmasq resolver and other required packages
PRIMARY_INTERFACE=$(ip -o -4 route show to default | awk '{print $5}')
mkdir /etc/dnsmasq.d
cat <<EOF > /etc/dnsmasq.d/foundry.conf
bind-interfaces
listen-address=10.0.1.1
interface-name=foundry.local,$PRIMARY_INTERFACE
EOF

cat <<EOF > /etc/netplan/01-loopback.yaml
# Add loopback address for pods to use dnsmasq as upstream resolver
network:
  version: 2
  ethernets:
    lo:
      match:
        name: lo
      addresses:
        - 127.0.0.1/8:
            label: lo
        - 10.0.1.1/32:
            label: lo:host-access
        - ::1/128
EOF
netplan apply

apt-get install -y dnsmasq avahi-daemon jq nfs-common sshpass kubectl helm

# Install k3s
mkdir -p /etc/rancher/k3s
echo "nameserver 10.0.1.1" >> /etc/rancher/k3s/resolv.conf
curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="v1.23.6+k3s1" INSTALL_K3S_EXEC="--disable traefik --disable servicelb --resolv-conf /etc/rancher/k3s/resolv.conf" sh -
sudo -u $SSH_USERNAME mkdir ~/.kube
cp /etc/rancher/k3s/k3s.yaml /home/$SSH_USERNAME/.kube/config
sed -i 's/default/foundry/g' /home/$SSH_USERNAME/.kube/config
chown $SSH_USERNAME:$SSH_USERNAME /home/$SSH_USERNAME/.kube/config

# Install CFSSL for certificate generation
curl -sLo /usr/local/bin/cfssl https://github.com/cloudflare/cfssl/releases/download/v1.6.1/cfssl_1.6.1_linux_amd64
curl -sLo /usr/local/bin/cfssljson https://github.com/cloudflare/cfssl/releases/download/v1.6.1/cfssljson_1.6.1_linux_amd64
chmod +x /usr/local/bin/cfssl*

# Install k-alias Kubernetes helper scripts
sudo -u $SSH_USERNAME git clone https://github.com/jaggedmountain/k-alias.git
(cd /usr/local/bin && ln -s ~/k-alias/[h,k]* .)

# Customize MOTD and other text for the appliance
chmod -x /etc/update-motd.d/00-header
chmod -x /etc/update-motd.d/10-help-text
sed -i -r 's/(ENABLED=)1/\10/' /etc/default/motd-news
cp /home/foundry/$SSH_USERNAME/foundry-banner /etc/update-motd.d/05-foundry-banner
rm /home/foundry/$SSH_USERNAME/foundry-banner
sed -i "s/{version}/$APPLIANCE_VERSION/" ~/mkdocs/docs/index.md
echo -e "Foundry Appliance $APPLIANCE_VERSION \\\n \l \n" > /etc/issue

# Create systemd service to configure netplan primary interface
mv /home/foundry/foundry/configure-nic /usr/local/bin
cat <<EOF > /etc/systemd/system/configure-nic.service
[Unit]
Description=Configure Netplan primary Ethernet interface
After=network.target
Before=k3s.service

[Service]
Type=oneshot
ExecStart=configure-nic

[Install]
WantedBy=multi-user.target
EOF
systemctl enable configure-nic
