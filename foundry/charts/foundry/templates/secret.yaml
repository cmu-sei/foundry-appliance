# Persist postgres account password on a chart reinstall
{{- $postgresPassword := "" }}
{{- $postgresqlSecret := lookup "v1" "Secret" .Release.Namespace (printf "%s-postgresql" (include "foundry.fullname" .)) }}
{{- if $postgresqlSecret }}
{{-   $postgresPassword = index $postgresqlSecret.data "postgres-password" | b64dec }}
{{- else }}
{{-   $postgresPassword = randAlphaNum 16 }}
{{- end }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ include "foundry.fullname" . }}-postgresql
  labels:
    {{- include "foundry.labels" . | nindent 4 }}
  annotations:
    helm.sh/resource-policy: keep
type: Opaque
data:
  postgres-password: {{ $postgresPassword | b64enc | quote }}

---
{{- $giteaSecret := lookup "v1" "Secret" .Release.Namespace (printf "%s-gitea-admin-secret" (include "foundry.fullname" .)) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "foundry.fullname" . }}-gitea-admin-secret
  labels:
    {{- include "foundry.labels" . | nindent 4 }}
  annotations:
    helm.sh/resource-policy: keep
type: Opaque
data:
  admin-password: {{ if $giteaSecret }}{{ index $giteaSecret.data "admin-password" }}{{ else }}{{ randAlphaNum 16 | b64enc | quote }}{{ end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "foundry.fullname" $ }}-topomojo-api-dbconnection
  labels:
    {{- include "foundry.labels" $ | nindent 4 }}
type: Opaque
stringData:
  appsettings.conf: |
    Database__ConnectionString = Server={{ include "foundry.fullname" $ }}-postgresql;Port=5432;Database=topomojo;Username=postgres;Password={{ $postgresPassword }};SSL Mode=Prefer;Trust Server Certificate=true;

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "foundry.fullname" $ }}-gameboard-api-dbconnection
  labels:
    {{- include "foundry.labels" $ | nindent 4 }}
type: Opaque
stringData:
  Database__ConnectionString: Server={{ include "foundry.fullname" $ }}-postgresql;Port=5432;Database=gameboard;Username=postgres;Password={{ $postgresPassword }};SSL Mode=Prefer;Trust Server Certificate=true;

---
{{- $keycloakSecret := lookup "v1" "Secret" .Release.Namespace (printf "%s-keycloak-auth" (include "foundry.fullname" .)) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "foundry.fullname" . }}-keycloak-auth
  labels:
    {{- include "foundry.labels" . | nindent 4 }}
  annotations:
    helm.sh/resource-policy: keep
type: Opaque
stringData:
  admin-password: {{ if $keycloakSecret }}{{ index $keycloakSecret.data "admin-password" | b64dec }}{{ else }}{{ randAlphaNum 16 }}{{ end }}
