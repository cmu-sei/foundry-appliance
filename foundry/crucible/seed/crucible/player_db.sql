--
-- PostgreSQL database dump
--

-- Dumped from database version 11.9
-- Dumped by pg_dump version 13.4

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

DROP DATABASE player_db;
--
-- Name: player_db; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE player_db WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'en_US.UTF-8';


ALTER DATABASE player_db OWNER TO postgres;

\connect player_db

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


SET default_tablespace = '';

--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO postgres;

--
-- Name: application_instances; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.application_instances (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    application_id uuid NOT NULL,
    display_order real NOT NULL,
    team_id uuid NOT NULL
);


ALTER TABLE public.application_instances OWNER TO postgres;

--
-- Name: application_templates; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.application_templates (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    embeddable boolean NOT NULL,
    icon text,
    name text,
    url text,
    load_in_background boolean DEFAULT false NOT NULL
);


ALTER TABLE public.application_templates OWNER TO postgres;

--
-- Name: applications; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.applications (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    application_template_id uuid,
    embeddable boolean,
    view_id uuid NOT NULL,
    icon text,
    name text,
    url text,
    load_in_background boolean
);


ALTER TABLE public.applications OWNER TO postgres;

--
-- Name: files; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.files (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    name text,
    view_id uuid,
    path text,
    team_ids uuid[]
);


ALTER TABLE public.files OWNER TO postgres;

--
-- Name: notifications; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notifications (
    key integer NOT NULL,
    broadcast_time timestamp without time zone NOT NULL,
    from_id uuid NOT NULL,
    from_type integer NOT NULL,
    link text,
    subject text,
    text text,
    to_id uuid NOT NULL,
    to_type integer NOT NULL,
    view_id uuid,
    priority integer DEFAULT 0 NOT NULL,
    from_name text,
    to_name text
);


ALTER TABLE public.notifications OWNER TO postgres;

--
-- Name: notifications_key_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.notifications ALTER COLUMN key ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.notifications_key_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.permissions (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    key text,
    value text,
    description text,
    read_only boolean DEFAULT false NOT NULL
);


ALTER TABLE public.permissions OWNER TO postgres;

--
-- Name: role_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.role_permissions (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    role_id uuid NOT NULL,
    permission_id uuid NOT NULL
);


ALTER TABLE public.role_permissions OWNER TO postgres;

--
-- Name: roles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.roles (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    name text
);


ALTER TABLE public.roles OWNER TO postgres;

--
-- Name: team_memberships; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_memberships (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    team_id uuid NOT NULL,
    user_id uuid NOT NULL,
    view_membership_id uuid NOT NULL,
    role_id uuid
);


ALTER TABLE public.team_memberships OWNER TO postgres;

--
-- Name: team_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_permissions (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    team_id uuid NOT NULL,
    permission_id uuid NOT NULL
);


ALTER TABLE public.team_permissions OWNER TO postgres;

--
-- Name: teams; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.teams (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    view_id uuid NOT NULL,
    name text,
    role_id uuid
);


ALTER TABLE public.teams OWNER TO postgres;

--
-- Name: user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_permissions (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    user_id uuid NOT NULL,
    permission_id uuid NOT NULL
);


ALTER TABLE public.user_permissions OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    key integer NOT NULL,
    id uuid NOT NULL,
    name text,
    role_id uuid
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_key_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users ALTER COLUMN key ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_key_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: view_memberships; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.view_memberships (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    view_id uuid NOT NULL,
    user_id uuid NOT NULL,
    primary_team_membership_id uuid
);


ALTER TABLE public.view_memberships OWNER TO postgres;

--
-- Name: views; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.views (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    description text,
    name text,
    status integer NOT NULL,
    clones uuid[]
);


ALTER TABLE public.views OWNER TO postgres;

--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20180409152814_InitialSchema	3.1.11
20180425120959_notifications	3.1.11
20180425150608_notification_severity	3.1.11
20180427174044_addNotificationExerciseId	3.1.11
20180427195539_addNotificationNames	3.1.11
20180530153923_Add_ExerciseUser	3.1.11
20180604144309_Add_LoadInBackground_To_Application	3.1.11
20180822200200_Added_Permissions	3.1.11
20180827180826_Added_ReadOnly_To_Permissions	3.1.11
20180914151120_Fixed_Membership_Relation	3.1.11
20180918145428_Fixed_UserPermissions	3.1.11
20200507133304_renamed_exercise_to_view	3.1.11
20200730203141_Added_Unique_Name_To_Role	3.1.11
20201203194327_file-table	3.1.11
20201208170359_add-team-ids	3.1.11
20201229140841_CloneField	3.1.11
20201229141350_ViewFiles	3.1.11
20201229142255_ClonesCorrectLocation	3.1.11
20210105145716_Test	3.1.11
20210119145036_VirtualView	3.1.11
\.


--
-- Data for Name: application_instances; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.application_instances (id, application_id, display_order, team_id) FROM stdin;
aecbd587-199d-44fc-b11d-2434e14ca59a	ad23395b-49fa-41fc-9a70-54e3a7ddd5be	0	8b78629b-1b2b-4d06-9c4b-70c326bc5e40
b131f649-4fc6-4a99-acf1-87384ac5805a	ad23395b-49fa-41fc-9a70-54e3a7ddd5be	0	e6207d5c-6c2b-4634-8ecf-bf2325ba7ec7
2b05e7bf-25d7-4a6b-82b9-b66a0dffa1a8	e44d960c-92ca-47bd-b4fc-d87b76fa7833	0	43003d68-752b-4084-8adc-c2f352c55591
e5cf242e-b440-4e2c-8175-e140459069e4	a1b3e900-3ac5-4fb8-aa06-f56658d61bd0	1	43003d68-752b-4084-8adc-c2f352c55591
146af930-e918-43b8-92a0-c550c05b97a4	e44d960c-92ca-47bd-b4fc-d87b76fa7833	0	485ffd07-2f9e-4dbc-8504-2f31dbe49cf4
\.


--
-- Data for Name: application_templates; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.application_templates (id, embeddable, icon, name, url, load_in_background) FROM stdin;
56e5574e-1b0e-4700-8072-bf8b78544e48	t	assets/img/player.png	Dashboard	https://$DOMAIN/alloy/views/{viewId}	f
e4698c62-7322-445b-946d-cafe1cf510bc	t	assets/img/player.png	VMs	https://$DOMAIN/vm/views/{viewId}	f
\.


--
-- Data for Name: applications; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.applications (id, application_template_id, embeddable, view_id, icon, name, url, load_in_background) FROM stdin;
ad23395b-49fa-41fc-9a70-54e3a7ddd5be	e4698c62-7322-445b-946d-cafe1cf510bc	\N	17fbb622-a42e-4220-ae58-5a4638981ae4	\N	\N	\N	\N
e44d960c-92ca-47bd-b4fc-d87b76fa7833	e4698c62-7322-445b-946d-cafe1cf510bc	\N	5ecdbed4-8513-4729-b17b-21c930be9ae9	\N	\N	\N	\N
a1b3e900-3ac5-4fb8-aa06-f56658d61bd0	56e5574e-1b0e-4700-8072-bf8b78544e48	\N	5ecdbed4-8513-4729-b17b-21c930be9ae9	\N	\N	\N	\N
\.


--
-- Data for Name: files; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.files (id, name, view_id, path, team_ids) FROM stdin;
\.


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.notifications (key, broadcast_time, from_id, from_type, link, subject, text, to_id, to_type, view_id, priority, from_name, to_name) FROM stdin;
\.


--
-- Data for Name: permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.permissions (id, key, value, description, read_only) FROM stdin;
24b2a62f-4ca1-498c-9dfa-74c4f55bad9b	SystemAdmin	true	Can do anything	t
49515af1-f5df-4fa6-a693-77a5e51c68ff	ViewAdmin	true	Can edit an View, Add/Remove Teams/Members, etc	t
\.


--
-- Data for Name: role_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.role_permissions (id, role_id, permission_id) FROM stdin;
\.


--
-- Data for Name: roles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.roles (id, name) FROM stdin;
\.


--
-- Data for Name: team_memberships; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_memberships (id, team_id, user_id, view_membership_id, role_id) FROM stdin;
8cad5b27-f654-48f3-a9c6-cd0270ba5c8b	e6207d5c-6c2b-4634-8ecf-bf2325ba7ec7	$OAUTH_ADMIN_GUID	cec205ac-8d3b-446e-8c15-3d04d6d0ae3a	\N
3d5065e8-fe11-4771-b43b-42e23092aa8a	8b78629b-1b2b-4d06-9c4b-70c326bc5e40	$OAUTH_ADMIN_GUID	cec205ac-8d3b-446e-8c15-3d04d6d0ae3a	\N
8a542c99-a308-4c70-8cda-64ec863e65ed	43003d68-752b-4084-8adc-c2f352c55591	$OAUTH_ADMIN_GUID	71ff3bc6-5c87-41c5-9eb8-c03e54315b95	\N
cc93895a-43c3-467e-8b8b-ec81f6f8f693	485ffd07-2f9e-4dbc-8504-2f31dbe49cf4	$OAUTH_ADMIN_GUID	71ff3bc6-5c87-41c5-9eb8-c03e54315b95	\N
\.


--
-- Data for Name: team_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_permissions (id, team_id, permission_id) FROM stdin;
3c6ae8e7-52da-48b9-b2d7-dd28951913bf	e6207d5c-6c2b-4634-8ecf-bf2325ba7ec7	49515af1-f5df-4fa6-a693-77a5e51c68ff
98864957-5735-4770-8cbb-4d873be0781f	43003d68-752b-4084-8adc-c2f352c55591	49515af1-f5df-4fa6-a693-77a5e51c68ff
\.


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.teams (id, view_id, name, role_id) FROM stdin;
e6207d5c-6c2b-4634-8ecf-bf2325ba7ec7	17fbb622-a42e-4220-ae58-5a4638981ae4	Admin	\N
8b78629b-1b2b-4d06-9c4b-70c326bc5e40	17fbb622-a42e-4220-ae58-5a4638981ae4	Blue	\N
43003d68-752b-4084-8adc-c2f352c55591	5ecdbed4-8513-4729-b17b-21c930be9ae9	Admin	\N
485ffd07-2f9e-4dbc-8504-2f31dbe49cf4	5ecdbed4-8513-4729-b17b-21c930be9ae9	Blue	\N
\.


--
-- Data for Name: user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_permissions (id, user_id, permission_id) FROM stdin;
5faf972d-fe02-40e1-8a41-2e6cd1e3eb87	$OAUTH_ADMIN_GUID	24b2a62f-4ca1-498c-9dfa-74c4f55bad9b
14e9fc33-ef35-464e-8a0a-8787c46b624a	$OAUTH_CRUCIBLE_ADMIN_GUID	24b2a62f-4ca1-498c-9dfa-74c4f55bad9b
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (key, id, name, role_id) FROM stdin;
1	$OAUTH_ADMIN_GUID	Administrator	\N
2	$OAUTH_CRUCIBLE_ADMIN_GUID	Crucible-Admin	\N
\.


--
-- Data for Name: view_memberships; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.view_memberships (id, view_id, user_id, primary_team_membership_id) FROM stdin;
cec205ac-8d3b-446e-8c15-3d04d6d0ae3a	17fbb622-a42e-4220-ae58-5a4638981ae4	$OAUTH_ADMIN_GUID	8cad5b27-f654-48f3-a9c6-cd0270ba5c8b
71ff3bc6-5c87-41c5-9eb8-c03e54315b95	5ecdbed4-8513-4729-b17b-21c930be9ae9	$OAUTH_ADMIN_GUID	8a542c99-a308-4c70-8cda-64ec863e65ed
\.


--
-- Data for Name: views; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.views (id, description, name, status, clones) FROM stdin;
17fbb622-a42e-4220-ae58-5a4638981ae4	An Example View for Crucible 	Example View	0	\N
5ecdbed4-8513-4729-b17b-21c930be9ae9	Example Alloy View (Status must be Inactive)	Example Alloy View	1	\N
\.


--
-- Name: notifications_key_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.notifications_key_seq', 1, false);


--
-- Name: users_key_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_key_seq', 2, true);


--
-- Name: users AK_users_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT "AK_users_id" UNIQUE (id);


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: application_instances PK_application_instances; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_instances
    ADD CONSTRAINT "PK_application_instances" PRIMARY KEY (id);


--
-- Name: application_templates PK_application_templates; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_templates
    ADD CONSTRAINT "PK_application_templates" PRIMARY KEY (id);


--
-- Name: applications PK_applications; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.applications
    ADD CONSTRAINT "PK_applications" PRIMARY KEY (id);


--
-- Name: view_memberships PK_exercise_memberships; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.view_memberships
    ADD CONSTRAINT "PK_exercise_memberships" PRIMARY KEY (id);


--
-- Name: views PK_exercises; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.views
    ADD CONSTRAINT "PK_exercises" PRIMARY KEY (id);


--
-- Name: files PK_files; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT "PK_files" PRIMARY KEY (id);


--
-- Name: notifications PK_notifications; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT "PK_notifications" PRIMARY KEY (key);


--
-- Name: permissions PK_permissions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permissions
    ADD CONSTRAINT "PK_permissions" PRIMARY KEY (id);


--
-- Name: role_permissions PK_role_permissions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role_permissions
    ADD CONSTRAINT "PK_role_permissions" PRIMARY KEY (id);


--
-- Name: roles PK_roles; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.roles
    ADD CONSTRAINT "PK_roles" PRIMARY KEY (id);


--
-- Name: team_memberships PK_team_memberships; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_memberships
    ADD CONSTRAINT "PK_team_memberships" PRIMARY KEY (id);


--
-- Name: team_permissions PK_team_permissions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_permissions
    ADD CONSTRAINT "PK_team_permissions" PRIMARY KEY (id);


--
-- Name: teams PK_teams; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT "PK_teams" PRIMARY KEY (id);


--
-- Name: user_permissions PK_user_permissions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_permissions
    ADD CONSTRAINT "PK_user_permissions" PRIMARY KEY (id);


--
-- Name: users PK_users; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT "PK_users" PRIMARY KEY (key);


--
-- Name: IX_application_instances_application_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_application_instances_application_id" ON public.application_instances USING btree (application_id);


--
-- Name: IX_application_instances_team_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_application_instances_team_id" ON public.application_instances USING btree (team_id);


--
-- Name: IX_applications_application_template_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_applications_application_template_id" ON public.applications USING btree (application_template_id);


--
-- Name: IX_applications_view_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_applications_view_id" ON public.applications USING btree (view_id);


--
-- Name: IX_files_view_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_files_view_id" ON public.files USING btree (view_id);


--
-- Name: IX_permissions_key_value; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_permissions_key_value" ON public.permissions USING btree (key, value);


--
-- Name: IX_role_permissions_permission_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_role_permissions_permission_id" ON public.role_permissions USING btree (permission_id);


--
-- Name: IX_role_permissions_role_id_permission_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_role_permissions_role_id_permission_id" ON public.role_permissions USING btree (role_id, permission_id);


--
-- Name: IX_roles_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_roles_name" ON public.roles USING btree (name);


--
-- Name: IX_team_memberships_role_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_team_memberships_role_id" ON public.team_memberships USING btree (role_id);


--
-- Name: IX_team_memberships_team_id_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_team_memberships_team_id_user_id" ON public.team_memberships USING btree (team_id, user_id);


--
-- Name: IX_team_memberships_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_team_memberships_user_id" ON public.team_memberships USING btree (user_id);


--
-- Name: IX_team_memberships_view_membership_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_team_memberships_view_membership_id" ON public.team_memberships USING btree (view_membership_id);


--
-- Name: IX_team_permissions_permission_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_team_permissions_permission_id" ON public.team_permissions USING btree (permission_id);


--
-- Name: IX_team_permissions_team_id_permission_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_team_permissions_team_id_permission_id" ON public.team_permissions USING btree (team_id, permission_id);


--
-- Name: IX_teams_role_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_teams_role_id" ON public.teams USING btree (role_id);


--
-- Name: IX_teams_view_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_teams_view_id" ON public.teams USING btree (view_id);


--
-- Name: IX_user_permissions_permission_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_user_permissions_permission_id" ON public.user_permissions USING btree (permission_id);


--
-- Name: IX_user_permissions_user_id_permission_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_user_permissions_user_id_permission_id" ON public.user_permissions USING btree (user_id, permission_id);


--
-- Name: IX_users_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_users_id" ON public.users USING btree (id);


--
-- Name: IX_users_role_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_users_role_id" ON public.users USING btree (role_id);


--
-- Name: IX_view_memberships_primary_team_membership_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_view_memberships_primary_team_membership_id" ON public.view_memberships USING btree (primary_team_membership_id);


--
-- Name: IX_view_memberships_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_view_memberships_user_id" ON public.view_memberships USING btree (user_id);


--
-- Name: IX_view_memberships_view_id_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_view_memberships_view_id_user_id" ON public.view_memberships USING btree (view_id, user_id);


--
-- Name: application_instances FK_application_instances_applications_application_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_instances
    ADD CONSTRAINT "FK_application_instances_applications_application_id" FOREIGN KEY (application_id) REFERENCES public.applications(id) ON DELETE CASCADE;


--
-- Name: application_instances FK_application_instances_teams_team_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_instances
    ADD CONSTRAINT "FK_application_instances_teams_team_id" FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: applications FK_applications_application_templates_application_template_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.applications
    ADD CONSTRAINT "FK_applications_application_templates_application_template_id" FOREIGN KEY (application_template_id) REFERENCES public.application_templates(id) ON DELETE RESTRICT;


--
-- Name: applications FK_applications_views_view_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.applications
    ADD CONSTRAINT "FK_applications_views_view_id" FOREIGN KEY (view_id) REFERENCES public.views(id) ON DELETE CASCADE;


--
-- Name: view_memberships FK_exercise_memberships_exercises_exercise_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.view_memberships
    ADD CONSTRAINT "FK_exercise_memberships_exercises_exercise_id" FOREIGN KEY (view_id) REFERENCES public.views(id) ON DELETE CASCADE;


--
-- Name: view_memberships FK_exercise_memberships_team_memberships_primary_team_membersh~; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.view_memberships
    ADD CONSTRAINT "FK_exercise_memberships_team_memberships_primary_team_membersh~" FOREIGN KEY (primary_team_membership_id) REFERENCES public.team_memberships(id) ON DELETE RESTRICT;


--
-- Name: view_memberships FK_exercise_memberships_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.view_memberships
    ADD CONSTRAINT "FK_exercise_memberships_users_user_id" FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: files FK_files_views_view_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT "FK_files_views_view_id" FOREIGN KEY (view_id) REFERENCES public.views(id) ON DELETE RESTRICT;


--
-- Name: role_permissions FK_role_permissions_permissions_permission_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role_permissions
    ADD CONSTRAINT "FK_role_permissions_permissions_permission_id" FOREIGN KEY (permission_id) REFERENCES public.permissions(id) ON DELETE CASCADE;


--
-- Name: role_permissions FK_role_permissions_roles_role_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role_permissions
    ADD CONSTRAINT "FK_role_permissions_roles_role_id" FOREIGN KEY (role_id) REFERENCES public.roles(id) ON DELETE CASCADE;


--
-- Name: team_memberships FK_team_memberships_roles_role_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_memberships
    ADD CONSTRAINT "FK_team_memberships_roles_role_id" FOREIGN KEY (role_id) REFERENCES public.roles(id) ON DELETE RESTRICT;


--
-- Name: team_memberships FK_team_memberships_teams_team_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_memberships
    ADD CONSTRAINT "FK_team_memberships_teams_team_id" FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: team_memberships FK_team_memberships_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_memberships
    ADD CONSTRAINT "FK_team_memberships_users_user_id" FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: team_memberships FK_team_memberships_view_memberships_view_membership_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_memberships
    ADD CONSTRAINT "FK_team_memberships_view_memberships_view_membership_id" FOREIGN KEY (view_membership_id) REFERENCES public.view_memberships(id) ON DELETE CASCADE;


--
-- Name: team_permissions FK_team_permissions_permissions_permission_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_permissions
    ADD CONSTRAINT "FK_team_permissions_permissions_permission_id" FOREIGN KEY (permission_id) REFERENCES public.permissions(id) ON DELETE CASCADE;


--
-- Name: team_permissions FK_team_permissions_teams_team_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_permissions
    ADD CONSTRAINT "FK_team_permissions_teams_team_id" FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: teams FK_teams_roles_role_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT "FK_teams_roles_role_id" FOREIGN KEY (role_id) REFERENCES public.roles(id) ON DELETE RESTRICT;


--
-- Name: teams FK_teams_views_view_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT "FK_teams_views_view_id" FOREIGN KEY (view_id) REFERENCES public.views(id) ON DELETE CASCADE;


--
-- Name: user_permissions FK_user_permissions_permissions_permission_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_permissions
    ADD CONSTRAINT "FK_user_permissions_permissions_permission_id" FOREIGN KEY (permission_id) REFERENCES public.permissions(id) ON DELETE CASCADE;


--
-- Name: user_permissions FK_user_permissions_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_permissions
    ADD CONSTRAINT "FK_user_permissions_users_user_id" FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: users FK_users_roles_role_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT "FK_users_roles_role_id" FOREIGN KEY (role_id) REFERENCES public.roles(id) ON DELETE RESTRICT;


--
-- PostgreSQL database dump complete
--

