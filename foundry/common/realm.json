{
  "id" : "crucible",
  "realm" : "crucible",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "e2b1d938-8fcb-4b11-85ae-f23973385264",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "crucible",
      "attributes" : { }
    }, {
      "id" : "ebd1e193-0ff9-4e76-aa04-5b779f32f326",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "crucible",
      "attributes" : { }
    }, {
      "id" : "014db126-c246-420d-ac06-76c617a470f9",
      "name" : "default-roles-crucible",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "crucible",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "b5397b28-5dab-4747-8946-3a5370fa1660",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "a86906e5-400d-4dab-98a7-83a780a5fee5",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "910e08f4-0fc2-4ac2-9dfb-31bb9bcc60b5",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "31440453-282e-46ae-81eb-a13d5cb137f8",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "5593d69d-ef6e-49e0-8645-4e84bc2d56ec",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "28a993ae-8010-44d5-b043-dae8866a7976",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-identity-providers", "manage-events", "query-users", "view-events", "view-identity-providers", "query-groups", "query-realms", "manage-realm", "manage-users", "view-authorization", "view-realm", "manage-authorization", "impersonation", "view-clients", "query-clients", "create-client", "view-users", "manage-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "94865aaf-d440-4662-a33b-5dae81bd5781",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "cf4fb9ff-6f0b-4fbd-b778-b771e25c1509",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "642c29f6-215a-49b0-9bfb-80bc4ba2d4d2",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "c9d29f58-6a95-4a88-b2b9-72d4ade4215b",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "1b7192fb-be89-4111-94a9-3ab67b402e10",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "95644776-3c0c-444f-9e4c-acd26c3c999d",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "5f5becae-dd90-4305-ac56-1aa115d2a4ab",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "888277e4-4568-4f5e-a333-bb25047a9e1b",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "2a98b918-87f8-444b-8449-6ddb95ceb755",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "e39a4a05-a904-4e2d-b33b-cc53716db735",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "e4160ddc-d825-4dba-b612-0275c7888813",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "f3f6b441-d081-4147-aa49-5340d0aeb93e",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      }, {
        "id" : "19afbe6f-f231-434f-81c3-8b0faa607da9",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
        "attributes" : { }
      } ],
      "alloy-ui" : [ ],
      "security-admin-console" : [ ],
      "vm-console-ui" : [ ],
      "caster-admin" : [ ],
      "player-ui" : [ ],
      "account-console" : [ ],
      "alloy-admin" : [ ],
      "broker" : [ {
        "id" : "d218eae4-0317-4b8d-aac4-0fd8509f8998",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f946cf86-90fa-4c7a-b261-a8224d0d9718",
        "attributes" : { }
      } ],
      "steamfitter-ui" : [ ],
      "alloy-api" : [ ],
      "player-admin" : [ ],
      "player-api" : [ ],
      "vm-api" : [ ],
      "admin-cli" : [ ],
      "gitlab" : [ ],
      "steamfitter-api" : [ ],
      "vm-ui" : [ ],
      "caster-api" : [ ],
      "account" : [ {
        "id" : "d9488870-2554-4adf-8f7a-ff2e7421dd6a",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c1924a9a-2215-4c12-be06-3caef6ef09d5",
        "attributes" : { }
      }, {
        "id" : "8f601ca0-eccc-4c15-94af-4c4c7ca592cb",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c1924a9a-2215-4c12-be06-3caef6ef09d5",
        "attributes" : { }
      }, {
        "id" : "8f259241-988b-4470-9d54-3c4360a32d69",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c1924a9a-2215-4c12-be06-3caef6ef09d5",
        "attributes" : { }
      }, {
        "id" : "8068387f-7c47-41f2-a3b8-d5a64dc072e2",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c1924a9a-2215-4c12-be06-3caef6ef09d5",
        "attributes" : { }
      }, {
        "id" : "ecbc7f54-1118-4179-8152-b482a94c1ac7",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c1924a9a-2215-4c12-be06-3caef6ef09d5",
        "attributes" : { }
      }, {
        "id" : "e85c97f3-b9a9-4b09-836f-85be457b8fda",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c1924a9a-2215-4c12-be06-3caef6ef09d5",
        "attributes" : { }
      }, {
        "id" : "0c435b29-d47f-4d53-bafa-475695b81301",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c1924a9a-2215-4c12-be06-3caef6ef09d5",
        "attributes" : { }
      } ],
      "caster-ui" : [ ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "014db126-c246-420d-ac06-76c617a470f9",
    "name" : "default-roles-crucible",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "crucible"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "d29518c4-f61c-4284-81c4-f2fbd79e6e9a",
    "createdTimestamp" : 1655323912456,
    "username" : "administrator",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "firstName" : "Administrator",
    "email" : "administrator@foundry.local",
    "credentials" : [ {
      "id" : "c48892ff-b940-484c-b3e7-86b680436f88",
      "type" : "password",
      "createdDate" : 1655323923331,
      "secretData" : "{\"value\":\"UHLKtp1Azl5tQMDnVhnn+4XVCynU3gOqksOZ1wlwkZLdHFtlb49dcnteUkJJVHeiGZgbLjujNCLGA97KikKrEg==\",\"salt\":\"9+oGtKmQ5WUqcFZbQbzl4w==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-crucible" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "de8f558b-95a4-46bc-89e6-9a801dc41e5a",
    "createdTimestamp" : 1655324017132,
    "username" : "crucible-admin",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "firstName" : "Crucible",
    "lastName" : "Admin",
    "email" : "crucible-admin@foundry.local",
    "credentials" : [ {
      "id" : "f7934a5a-aebc-4533-bc94-0a5ac3365d43",
      "type" : "password",
      "createdDate" : 1655324036170,
      "secretData" : "{\"value\":\"6WozquBahAyybvcGG4Q3AoGVXhNrsI1OuTeic4pcokTTYMQLLDuJtqUtufteQHmnQkkC/WQE94SON7i7L2bDKA==\",\"salt\":\"9Kp3kuVCiPAk7/8stFEZbQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-crucible" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "c1924a9a-2215-4c12-be06-3caef6ef09d5",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/crucible/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/crucible/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7fd88c26-2b3c-4ac5-a700-72b202ce6834",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/crucible/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/crucible/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "e6f351aa-c6b0-497a-9c52-f891dbe8e1a3",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3a807f51-2b18-48a3-a655-035d5ce2880e",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "614d7808-5f9e-4f1f-8e5d-034963c4e598",
    "clientId" : "alloy-admin",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/alloy/api/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "steamfitter-api", "microprofile-jwt", "caster-api", "alloy-api" ]
  }, {
    "id" : "e8235fcd-b093-4afa-bfac-c7acec140bc2",
    "clientId" : "alloy-api",
    "rootUrl" : "https://foundry.local/alloy/api",
    "adminUrl" : "https://foundry.local/alloy/api",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/alloy/api/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "steamfitter-api", "microprofile-jwt", "caster-api", "alloy-api" ]
  }, {
    "id" : "f562fdb0-4a14-49f2-91ff-763e259b163e",
    "clientId" : "alloy-ui",
    "rootUrl" : "https://foundry.local/alloy",
    "adminUrl" : "https://foundry.local/alloy",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/alloy/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "steamfitter-api", "microprofile-jwt", "caster-api", "alloy-api" ]
  }, {
    "id" : "f946cf86-90fa-4c7a-b261-a8224d0d9718",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "d10fa94c-88e8-43b5-8a0d-96d9446606ce",
    "clientId" : "caster-admin",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7e3b0ab3-63b8-4fe7-8186-f6e62b6d10bb",
    "clientId" : "caster-api",
    "rootUrl" : "https://foundry.local/caster/api",
    "adminUrl" : "https://foundry.local/caster/api",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/caster/api/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt", "caster-api" ]
  }, {
    "id" : "6ebd9b86-c94a-4134-a422-a8ae94bf2465",
    "clientId" : "caster-ui",
    "rootUrl" : "https://foundry.local/caster",
    "adminUrl" : "https://foundry.local/caster",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/caster/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt", "caster-api" ]
  }, {
    "id" : "88161c2d-8444-409e-93b2-e239a86bec64",
    "clientId" : "gitlab",
    "rootUrl" : "https://gitlab.foundry.local/users/auth/keycloak",
    "adminUrl" : "https://gitlab.foundry.local/users/auth/keycloak",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "https://gitlab.foundry.local/users/auth/keycloak/*" ],
    "webOrigins" : [ "https://gitlab.foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.url" : "https://gitlab.foundry.local/keycloak/connect/endsession",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "2f5428e2-e880-4355-bcda-6b7baeec0899",
    "clientId" : "player-admin",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c9f8b25b-c0dd-4b49-b3cb-9588cd9a966d",
    "clientId" : "player-api",
    "rootUrl" : "https://foundry.local/player/api",
    "adminUrl" : "https://foundry.local/player/api",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/player/api/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "434c03f4-7000-4bea-828a-4922c302a00e",
    "clientId" : "player-ui",
    "rootUrl" : "https://foundry.local/player",
    "adminUrl" : "https://foundry.local/player",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/player/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "62cf861f-5c73-4e43-a055-7dba9d7ebab0",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "5eb64a16-7031-495a-bda0-4b54f78680b7",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/crucible/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/crucible/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "e88595cb-b9fd-40cd-b469-c4c5ac57acb6",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "f1db76fb-5a2e-46fd-987f-5da7936d0803",
    "clientId" : "steamfitter-api",
    "rootUrl" : "https://foundry.local/steamfitter/api",
    "adminUrl" : "https://foundry.local/steamfitter/api",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/steamfitter/api/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "steamfitter-api", "microprofile-jwt" ]
  }, {
    "id" : "10ac2337-aed2-4980-acdb-9e31b29f28e2",
    "clientId" : "steamfitter-ui",
    "rootUrl" : "https://foundry.local/steamfitter",
    "adminUrl" : "https://foundry.local/steamfitter",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/steamfitter/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "steamfitter-api", "microprofile-jwt" ]
  }, {
    "id" : "79ceb067-639e-4f3b-932d-cbdfdd21ef61",
    "clientId" : "vm-api",
    "rootUrl" : "https://foundry.local/vm/api",
    "adminUrl" : "https://foundry.local/vm/api",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/vm/api/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "2c4b5bbf-08d7-41a8-9526-2654956f8d8b",
    "clientId" : "vm-console-ui",
    "rootUrl" : "https://foundry.local/console",
    "adminUrl" : "https://foundry.local/console",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/console/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "player-api", "vm-api", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "20b44c30-ee42-4092-8ad7-2f613a1cbe93",
    "clientId" : "vm-ui",
    "rootUrl" : "https://foundry.local/vm",
    "adminUrl" : "https://foundry.local/vm",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://foundry.local/vm/*" ],
    "webOrigins" : [ "https://foundry.local" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "acr.loa.map" : "{}",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "ef887514-ab84-4d31-8662-26643789485c",
    "name" : "player-api",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "6003c601-a6bb-426c-b8dc-330cc207722d",
      "name" : "player-api-audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "player-api",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "false"
      }
    } ]
  }, {
    "id" : "9c4cfc4a-01a5-4de8-b181-46867cdb0fa5",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "7fbf3477-f42f-403c-bf45-95764c6810e6",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "399c2f40-7089-4dda-9b12-865cf5cf7551",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "1cf1792e-5766-45f0-8f1d-25db59d0db1f",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "3d89b9bd-6c3f-4b65-a005-8ee29c78d820",
    "name" : "steamfitter-api",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "bd8c8c67-faa3-4414-9c6e-3058db739a1b",
      "name" : "steamfitter-api-audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "steamfitter-api",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "false"
      }
    } ]
  }, {
    "id" : "c4f30f32-15e5-44fd-8afe-d9cddc0d5959",
    "name" : "alloy-api",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "b4509c1f-5c0e-4bf3-ac59-679821769ce9",
      "name" : "alloy-api-audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "alloy-api",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "false"
      }
    } ]
  }, {
    "id" : "1236bef3-865c-4ba8-acd2-1df4da79d029",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "291b7a93-8322-4494-a3a6-557664fe4259",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4609072e-f4d9-4948-a9e6-c94de4569566",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "d5bbf70e-9fc2-4ebe-9768-b70a71579616",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "e3c2fca6-6904-4df5-b72f-3ca163989c27",
    "name" : "caster-api",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "27a7358f-1977-4e9c-9dcb-2da20855b5a7",
      "name" : "caster-api-audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "caster-api",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "false"
      }
    } ]
  }, {
    "id" : "6e8c7ebf-6443-41b7-8df8-0a6f9630552d",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "0f8e229a-b48f-479c-bc6a-54ae41021a6d",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "b737125d-f7ad-4cd7-9f96-5711e4bc5299",
    "name" : "vm-api",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "bec3c9e0-b0c7-4e6f-9142-1a5fd0a79603",
      "name" : "vm-api-audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "vm-api",
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "false"
      }
    } ]
  }, {
    "id" : "a25af244-00e7-4a9c-9f69-f28d841dff2e",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "40650132-b7d2-4fb9-b69f-d51d1cabf378",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "db747d98-c001-4394-b4c1-3efdd58b3fa0",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "da030350-44f8-47bd-bc57-477171678eeb",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "592be896-cad6-456a-bc41-c8f856df6983",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "99130805-e2e1-49b0-99b4-19f8045c4666",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "37e38ace-432d-4a42-b0bf-cb7ff2f649e9",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "18dca7d7-c3ac-4212-a2b2-6cfc096d4a4b",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1bf71b32-0e78-41de-911a-02d84d2af837",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9178fdf7-b714-427e-aa21-10dace02ea0d",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4ca58e61-1a68-4d8a-b22a-94b7eb60a99b",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f47fcf73-6894-4c4b-92f2-b782fc15fef1",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0cc4393e-f241-4737-a595-74caa38887d2",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "05cddd40-8e2c-4211-8aee-6d1aa6effbab",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "16a9ef47-53cc-40d4-911c-41b02a6a5e4f",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "54a04797-cbaa-4871-8c36-1d2c528f85f4",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "c11c20cd-ba76-4339-895a-9fd03ef806e1",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "bd0a829a-fe6a-4177-9202-40ba8ed33610",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "9483516d-eff0-4352-8771-906af785a750",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "2459f891-2ea6-4560-b9dc-14f83aabbf5b",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "5c7402aa-7032-4964-a904-f160703dc76e",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "69a31f9c-b7e8-4975-be9e-1aa32e7e68e9",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "1ce0c5ef-19b0-4b93-a17b-8544cd6b0e20",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "28239fc3-1c2e-42c5-ae90-312041db8f79",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b7427417-5caa-4be9-b053-f65a363d6f53",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "ec5bafdd-f891-41fb-a631-9a3ce0d4079a",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "5c8b9218-d500-41ec-b573-033f401558ab",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "d2d6ea82-5f5a-4962-9a37-5fb45cfdce8d",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "d0d36624-0663-4106-a53a-0d4678d270a6",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "2dd0ff6b-1b7e-4f02-94d4-89f48d046b10",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "51e22855-7538-4337-ba3e-5b5dcd83143a",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "dfbd4ea0-a524-4b55-9f6a-365be28743ad",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "4c9fb1a6-ba49-4ee4-8cfb-9aaad0dcb189",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "2cdaabe6-c1fe-4f34-992f-ff76a474efb8",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAswo3vB2XtSeY1VESfWdcPA3SG8Wp1vtNBjt8g8GcxzB5UuKnVCWymZHtK04NnC15dTRV9HWIQOFzSD1nHa7tpRcw4mmunR5XkujEPxU0JcwUlk3v7Xwx/QHHH7cCWOm4H3wsQXQkfJ0/w8YsSi0GOq2mXGCZdftGKKKuacaAySOFNRlRnQCQG7exJG9YhPuv3J7T+jlSIdy1lBXST09DPbHV8U/Xvljmdu+8UYxp1+10OOGEElhFIS98uamCxHhIaha87fmzCo4dMHLMXiezBk5r7qjdEAyrG3CoRqtcJXSNDE6TLXXmju3nt/AQ6SDThlINOE9Ncru2afPXJi4cPwIDAQABAoIBADW25Q3NGwzAenvVPOTes69YviaS4OecsXkjM7Ibzjt8cYnKckUuoiysuSj62951TjE5qGgVMvG0MfAEbAFdz/JtyL7E0hxVVBTBPM9oPyLv3WVSsJ7hWeX8OI9tSoj+Zb0cdfKVM7UnQFAuDm+annnQS07/tErPPjdGx2j4ov605sPF5Y0+B2duOMTlkXdek1VBod9ZfArf6uhOrTW5sfJ4xX8fieaHyyBtLQ3FB+ANuDAaBvK4mAi/JHUHwRMc8ePJyLbSKJXWZQ1vpdGlF/UtQbqFyfSKM570RBDvcbESFGJ9OFREQT7buGUvRHS4xHFP+zc25pN10Tim/Hm/c9ECgYEA4j6rJAQMZFr+H4SIl+s64sg5jQz7n+iRv/k6Esfa71cj+VnBYnnWv200lBfVV/pab3npMDpkce7fpsIHFFFvaYng2SuSqBdnAGLGOxr7zQWzMId7SX+OTD9daBk1hubTHEEFZdgOFygCpjq7uCjojkm0X+qPFTmGMWAaDQ6Grj0CgYEAypY6z1FMBY8fl11qqqmjFIksPA4jU1Q+q9tCy4dCpcS3/rS1N+qR6UShOlzyPMqfVRT6RFBeIwSYoNE4/mnk8sLKGm+IGGmfU/VgR5quJ/VXXBy8WRL6ebfNhzMDYPFmE4mDhbG8a7TEJ0FDvbVYXNqly2qgtr9cx3yUo2nPuCsCgYBTSXq7MXpWX2D5vVKDiqcM4WS+Vi8zeOxe3aLRUx13yn6FxtL4K54wrkUS14tEbfdo3lpH1NcxUhynSPpOMoRvN8C8cdv1YVgbvkD3dUGJAjYrAVUTg4+g5hq+vbkExmilGBKioVzejW4cP7bnXrft2Zg7TyAJUjniZ1xvvg86iQKBgEvfgf0dZIx8cwd8rDNovzQ0v8VqQh62YZZ50wVpDjQJfiO9yFU93BHyazPxlaPg+1WhOq4VL3yL/yHT2jWmsWGeRJUsCluiS1Llhn6q1ukOQP61oHD346lshmRJXc2T+3f7u695xqjMFd7h2Z4Waha0qP2LXM+00enApeah/XLrAoGAJtChdvxklR/+xfKF+IAc0oseSGKkF7HjYIBdPMLf3F8qDPkVvJlmGvWF9JaeN0xcYw/mCI4G2gUFKKDbDRj2zUWGGhNffuM9+Tar6wBHR2lfmVpaV8/IR8k1cd7qQAU1KGayC06e+rai5e8vNyHnXl6MPTyRMuJD8DzEZL77Okc=" ],
        "certificate" : [ "MIICnzCCAYcCBgGBaNxXzjANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhjcnVjaWJsZTAeFw0yMjA2MTUxOTMyNTlaFw0zMjA2MTUxOTM0MzlaMBMxETAPBgNVBAMMCGNydWNpYmxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAswo3vB2XtSeY1VESfWdcPA3SG8Wp1vtNBjt8g8GcxzB5UuKnVCWymZHtK04NnC15dTRV9HWIQOFzSD1nHa7tpRcw4mmunR5XkujEPxU0JcwUlk3v7Xwx/QHHH7cCWOm4H3wsQXQkfJ0/w8YsSi0GOq2mXGCZdftGKKKuacaAySOFNRlRnQCQG7exJG9YhPuv3J7T+jlSIdy1lBXST09DPbHV8U/Xvljmdu+8UYxp1+10OOGEElhFIS98uamCxHhIaha87fmzCo4dMHLMXiezBk5r7qjdEAyrG3CoRqtcJXSNDE6TLXXmju3nt/AQ6SDThlINOE9Ncru2afPXJi4cPwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBBVylKQ4Ec+EgcIJAtGZSUd/9AeI30d2tIjcsEVm7L9KMeQh5Yj16wpoP6nDL/2iIoDEUz8xoi76aPBhKBb6WKfm1I/nglcbrfhLp+kK69EeP95mUshDeHO4T/Y+PTm3j5R/JUE3gBCufE8bGzRWNoZNgWRP0tI2aNnEFj13j0yir841KTEGVDjzbcdTza/m2EfvyfZN6lxkowkfty2Ii1cLFYcgCerMYZtNAYNqkuHf/nBdcw7yhH5Rb5WhRyoVYtI/+Ll0Wd1m6qol2595rbKV/qObuD5OIWSd2hVbUV1UUT2e6zruYOcumKHJPpmWt9AsDWS3JgJNzCoSt4HpTd" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "22ab3db9-5aaa-4aa4-aa78-68f2b1732086",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAxUX9z7960y6G732fIHYuHjrs6biNymmrQwzlK8KheqcRrjvWF9GE7LDJE/hQWLQfoxFnlERh2jDe87su3n5qMtp2sPdD2lBr3BXYmD8pQBRcE3hPbopC1lNRXD22BD1R3/HfR7Eo5lPCXKllWh6MxaJD45NxMT9KrMzLVGLQA0/b9aIcZAIJ7Z6IaPRXMHl5D30UPLH0d0g68Cm8QuNJaBw6E2SMj/sWqhCXTexuI+o2dYCSjWAhy+FoigGg1NnwYUSO5HxhJEy9aU0ENQAbiENbaWEqHu844YQGVxuChLWm4XFGH0lCrhhTkvIEBl1lpC9Usz8lshS7X5pazJFyVQIDAQABAoIBAQCv+VCA6oEJMx7hMgEptuJKyyudDalGH17LkAw6LgNX4wKNlwjS9G6LqOOl8cLSbdMu5o6sHxfex+uKJbaYeNIJDQIFuHyJmWWtzLsKjIUiiUbdg1vv8lvOzkHsc4wTWhPYHe2cCTe/xoXBnMYxTsEqZyYCMvstABV/8auLWh3OZPGUnynD1+7Cn7VuMruMcGZfMRePGSlql4HCGlT3T+EbSPX0rFlgCBb+YQhbZ/DKkZyCkxl5azhQVYcPn6L3J0ITvmIpD7vSZtPIZDhL88/Wi7IPNe5E3rk6vtN7+Y7zdrtV0s79W6sXdj/xleV/kk66ONqFLjjinw8Uq/LTfS6hAoGBAP37Zrl03jzzF+p0L+0TXfiCxFSyoamET9sGkvttqI3fozx90lR9U+f28/HSdd2hpCl3v08Fa8CuPoLlZlFoAcJ70Bnh8fiNPL4vQ4qOgpe1bmbg7MdvSL8W+DvylpYzOu4lE9ZdM/3SpsSmdr58POkYgJdZVgzTxYMGbjPEalz9AoGBAMbXPreY8xYQ3Gstg4p5QlKcjLf0Pf+WekIembsMwpJAbMJNmeZKCnQ2ytW+3PvYKmxh3VvyL5EiIT4Dwk+ylU6HTN8WxaTFGa630svQAum3dxkDyNPqHBzIqJF79JQw6OySYytiRtZPIE3tWoixk/sirkAV8yRqneltUNDICRY5AoGAcLlGw2MCS+zcnXtJ1h/1Yhmvx6Osqo8F3kERtTPbTnSGf4+cbVFejyKE7LwrAd3+/USfjRPr2g27wt7Lxa+ysD3Bg+tLOLR+1C4n/PP5NBobUN/dVzql/+HS9NBbU3iTXCTqpAajz7DRwY/cPfjoE9CDKilFTtYi4F9XQ/SV/IUCgYAToImDS+iqw+1N8wcp8wA18Vf+jHBWOz9EKYsZKJBIKW3S3CAV2Dch84qgAKAFh/fgDOTxv30sgUbwvSRAA6uzPa27056cvgvj8CcxkQ3IjiCGapY3PMObn77r5WVl/1HukCCT1raRTuwsZQJrvcOSpYC3uLLwZEnEEdNJWIV1GQKBgCVRngRBInd0s9dX0YOZ8eGfctLLf93ltBP98cu3x6exQhGZH/4AzOdAKLuZVuH2+m91xc4fY6IxCH8ea3iXYA+BcAOFYsXkf8XkTrKaCUJNHMWvN14QjeMHhDh1JgnqISnFb4iaDSkVFNX4he7ryuF3vTht85IvqlFAeqDVulHR" ],
        "certificate" : [ "MIICnzCCAYcCBgGBaNxWzTANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhjcnVjaWJsZTAeFw0yMjA2MTUxOTMyNTlaFw0zMjA2MTUxOTM0MzlaMBMxETAPBgNVBAMMCGNydWNpYmxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxUX9z7960y6G732fIHYuHjrs6biNymmrQwzlK8KheqcRrjvWF9GE7LDJE/hQWLQfoxFnlERh2jDe87su3n5qMtp2sPdD2lBr3BXYmD8pQBRcE3hPbopC1lNRXD22BD1R3/HfR7Eo5lPCXKllWh6MxaJD45NxMT9KrMzLVGLQA0/b9aIcZAIJ7Z6IaPRXMHl5D30UPLH0d0g68Cm8QuNJaBw6E2SMj/sWqhCXTexuI+o2dYCSjWAhy+FoigGg1NnwYUSO5HxhJEy9aU0ENQAbiENbaWEqHu844YQGVxuChLWm4XFGH0lCrhhTkvIEBl1lpC9Usz8lshS7X5pazJFyVQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBTP4xlLfeoSPJADEGWIKCnCetjBIW6E/GfihQZuU0Fz4wAVCGK9EAO8IveHIWNG864Y624moze4IXMr/2ETotMNbNmHFhQqmn07LwvDJHkekqSqrAJON47Avxrl6u3FSON5upZolAHcUFoB6wG0YCKnpGF6cHD2AfZqESh5Gmmj00VMEpMAhx//EWBX+xA8ueyONvi3bgNN5ahfyXHhAGvQp8Q0RM31Vo353kEkLyeYVfpJfAH7gNmO9q6pfEW4o1P086bEi0ns9bY/fGeUJ3n9fnP7u9WmzkZTiQLS7B/el+y4p4vmQ5vsCFw6wBRPjUgspYHO/gp3QgTgbR39afh" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "b22e8a50-1d58-4eb7-bc2d-3f1d24bb289a",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "11ea2473-0ecd-4a0d-9e18-7f744451ab1e" ],
        "secret" : [ "rGIQqM9fCcx_8VMcRXV421SoiqG4Xil4b652OA9hAoH7ckaYYbnIWAI_y9eTnLQGYfyFEFKmwBlDdctbX3N6QA" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "0fd9b3cc-b629-4396-b7c5-f1276913edea",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "ec78a235-bea2-463d-a778-b3fd2e009877" ],
        "secret" : [ "9VgMPbNhfvLmvg1mLC3JFQ" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "45cb9f6b-6930-469d-b63b-26dd7684ecb6",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8ba3aadb-0578-48c9-8947-a78f9db672ba",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "99847db7-ab10-4c55-a1d9-73a895e6c056",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "36fe50a2-9dfd-4d1e-9da7-38394d7e141e",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b276836b-49d4-47d0-b581-c39818cff259",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "def022fb-05f4-4a0b-96e9-0ebe10e8036b",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "50cc9797-3fe8-46a8-83b7-1cc614414a37",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "640c4863-6f53-4514-9485-bd12606fca78",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "40477195-d8a1-4d0c-bc6b-4813a1e0c792",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d6d22f05-2bad-45ed-a844-c59896368963",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "64cd7bf0-8a3f-496c-b6ec-6aa03c0ca0b1",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "da1cde0e-bcf8-43fe-b4b3-01a96ce8c3bb",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4a673037-a68f-4ca8-bead-0947f3c5ce01",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f304d893-b288-4342-8988-ff63a9b711d0",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "08d1341f-110a-437e-b5a2-b36878aac276",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "45304de9-e28b-4182-985b-22a446000d93",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d79c1532-be37-4ee9-b2f3-8236eb5ffdd5",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b7aedfde-809b-4aac-8f9b-c42fdf328b73",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "01bb004b-c4be-47fe-a768-9e54d854f35f",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d1050831-0482-47c2-9107-87353c575273",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "bb7a0bc6-e780-434e-a44a-a82bdadd8737",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "5a6d6189-0aa9-400c-87e0-9aca8c0dcd48",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "17.0.1",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}