#!/bin/bash -xe
# 
# Copyright 2021 Carnegie Mellon University.
# Released under a BSD (SEI)-style license, please see LICENSE.md in the
# project root or contact permission@sei.cmu.edu for full terms.

#############################
#   Foundry Stack Install   #
#############################

# Change to the current directory
cd "$(dirname "${BASH_SOURCE[0]}")"
source ../scripts/utils

# Add Helm repos and update
if [[ $(is_online) == true ]]; then
  mkdir -p ../helm
  helm repo add bitnami https://charts.bitnami.com/bitnami
  helm repo add runix https://helm.runix.net/
  helm repo add nicholaswilde https://nicholaswilde.github.io/helm-charts/
  helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/
  helm repo add gitea https://dl.gitea.io/charts/
  helm repo add kvaps https://kvaps.github.io/charts
  helm repo add sei https://helm.cyberforce.site/charts
  helm repo add stackstorm https://helm.stackstorm.com/
  helm repo add gitlab https://charts.gitlab.io
  helm repo update
fi

# Forward coredns to host dnsmasq
appliance_ip=$(ip route get 1 | awk '{print $(NF-2);exit}')
export appliance_ip=$(ip route get 1 | awk '{print $(NF-2);exit}')
export dns_server=$(nslookup example.tld | awk '/Server:/{print $(NF)}')
#export dns_server=10.0.1.1
envsubst < coredns-configmap.yaml | kubectl apply -n kube-system -f -
kubectl get configmap/coredns -n kube-system -o yaml | sed "s/8.8.8.8 8.8.4.4/10.0.1.1/" | kubectl replace -f -

kubectl rollout restart deployment/coredns -n kube-system

# Disable HSTS
kubectl patch configmap nginx-load-balancer-microk8s-conf \
                        --patch "$(cat ingress-hsts-disable.yaml)" \
                        --namespace ingress

# Add host certificate
kubectl create secret tls appliance-cert --key certs/host-key.pem --cert <( cat certs/host.pem certs/int-ca.pem ) --dry-run=client -o yaml | kubectl apply -f -

# Add root ca
kubectl create secret generic appliance-root-ca --from-file=appliance-root-ca=certs/root-ca.pem --dry-run=client -o yaml | kubectl apply -f -
kubectl create configmap appliance-root-ca --from-file=root-ca.crt=certs/root-ca.pem --dry-run=client -o yaml | kubectl apply -f -

# Install PostgreSQL and pgAdmin4 
helm_deploy -p ../helm -u -f postgresql.values.yaml --version 11.0.2 bitnami/postgresql
#helm upgrade --install --version 11.0.2 -f postgresql.values.yaml postgresql bitnami/postgresql
#helm install -f pgadmin4.values.yaml pgadmin4 runix/pgadmin4

# Install code-server (browser-based VS Code)
helm_deploy -p ../helm -u -f code-server.values.yaml --version 1.1.1 nicholaswilde/code-server
#helm upgrade --install --version 1.1.1 -f code-server.values.yaml code-server nicholaswilde/code-server

# Kubernetes Dashboard
helm_deploy -p ../helm -u -f kubernetes-dashboard.values.yaml kubernetes-dashboard/kubernetes-dashboard
#helm upgrade --install --version 5.1.3 -f kubernetes-dashboard.values.yaml kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard

# Add root CA to chart values
ed -s staticweb.values.yaml <<< $'/cacert:/s/\"\"/|-/\n/cacert:/r !sed "s/^/  /" certs/root-ca.pem\nw' || true
cp certs/root-ca.pem web/root-ca.crt

# Install Gitea
helm_deploy -p ../helm -u --version 5.0.1 -f gitea.values.yaml gitea/gitea
#helm upgrade --install --version 5.0.1 -f gitea.values.yaml gitea gitea/gitea
timeout 5m bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' https://foundry.local/gitea)" != "200" ]]; do sleep 5; done' || false
./setup-gitea

# Install NFS server
helm_deploy -u --version 1.4.0 -p ../helm -f nfs-server-provisioner.values.yaml kvaps/nfs-server-provisioner
#helm upgrade --install --version 1.4.0 -f nfs-server-provisioner.values.yaml nfs-server-provisioner kvaps/nfs-server-provisioner
kubectl patch daemonset nginx-ingress-microk8s-controller -n ingress --type 'json' --patch \
  '[{"op": "add", "path": "/spec/template/spec/containers/0/ports/-", "value": {"name":"nfs-tcp","hostPort":2049,"containerPort":2049,"protocol":"TCP"}}]' || true
kubectl patch daemonset nginx-ingress-microk8s-controller -n ingress --type 'json' --patch \
  '[{"op": "add", "path": "/spec/template/spec/containers/0/ports/-", "value": {"name":"nfs-udp","hostPort":2049,"containerPort":2049,"protocol":"UDP"}}]' || true
kubectl apply -f nfs-ingress.yaml --dry-run=client -o yaml | kubectl apply -f -

# Install Common foundry apps
helm_deploy -r ../appliance.vars -p ../helm -v 0.2.0 -u -f identity.values.yaml sei/identity
#helm upgrade --install --wait -f identity.values.yaml identity ../charts/identity
helm_deploy -r ../appliance.vars -u -p ../helm --version 0.2.0 -f staticweb.values.yaml sei/staticweb
#helm upgrade --install --version 0.2.0 -f staticweb.values.yaml staticweb ../charts/staticweb